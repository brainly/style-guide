.sg-card-new {
  --card-background-color: var(--white);
  --card-border-color: var(--gray-30);
  --card-border-color-focus: var(--gray-40);
  --card-border-color-hover: var(--gray-60);
  --card-border-color-invalid: var(--red-60);
  --card-border-color-invalid-focus: var(--red-30);
  --card-border-color-invalid-hover: var(--red-50);
  --card-border-color-checked: var(--black);

  display: block;
  position: relative;
  width: var(--card-width, auto);
  height: var(--card-height, auto);
  border-radius: 8px;
  border: 2px solid transparent;
  background-color: var(--card-background-color);
  user-select: none;

  transition: transform $durationModerate2 $easingRegular,
    border $durationModerate1 $easingLinear;

  &--variant-outline {
    border-color: var(--card-border-color);
  }

  &--variant-solid {
    border-color: transparent;
  }

  &:active:not([data-disabled='true']) {
    transform: scale(0.98);
  }

  &[data-disabled='true'] {
    opacity: 0.45;
  }

  &[data-checked='true'] {
    border-color: var(--card-border-color-checked);

    & .sg-checkbox {
      --checkboxColor: var(--card-border-color-checked);
      --checkboxCheckedColor: var(--card-border-color-checked);
    }
  }

  &[data-invalid='true'] {
    border-color: var(--card-border-color-invalid);

    & .sg-checkbox {
      --checkboxColor: var(--card-border-color-invalid);
      --checkboxCheckedColor: var(--card-border-color-invalid);
    }
  }

  &:focus-within {
    --focusInnerColor: var(--card-border-color-focus);
    --focusColor: var(--card-border-color-focus);
    --focusOuterColor: transparent;

    box-shadow: 0px 0px 0px 2px var(--focusInnerColor),
      0px 0px 0px 4px var(--focusColor), 0px 0px 0px 6px var(--focusOuterColor);

    outline: none;
    animation: focusShadow1 $durationQuick2 $easingEntry,
      focusShadow2 $durationQuick2 $easingEntry calc($durationQuick2 / 2),
      focusShadow3 $durationQuick2 $easingEntry $durationQuick2;

    &[data-invalid='true'] {
      border-color: var(--card-border-color-invalid);
      --focusInnerColor: var(--card-border-color-invalid-focus);
      --focusColor: var(--card-border-color-invalid-focus);
      --focusOuterColor: transparent;
    }
  }

  &:hover:not([data-disabled='true']) {
    border-color: var(--card-border-color-hover);

    & .sg-checkbox {
      --checkboxColor: var(--card-border-color-hover);
      --checkboxCheckedColor: var(--card-border-color-hover);
    }

    &[data-invalid='true'] {
      border-color: var(--card-border-color-invalid-hover);

      & .sg-checkbox {
        --checkboxColor: var(--card-border-color-invalid-hover);
        --checkboxCheckedColor: var(--card-border-color-invalid-hover);
      }
    }
  }

  /* Indicators */
  & .sg-checkbox {
    --checkboxColor: var(--card-border-color);
    --checkboxCheckedColor: var(--card-border-color-checked);
  }

  & .sg-checkbox--disabled {
    opacity: 1;
  }
}

.sg-card-new__input {
  position: absolute;
  opacity: 0;
  top: 0;
  left: 0;
}

.sg-card-new__indicator {
  position: absolute;

  /*
    The indicator is coming from the real checkbox element so we need to remove its input from the layout
  */
  & input {
    display: none;
  }

  &--top-left {
    top: -2px;
    left: -2px;
  }
  &--center-left {
    top: 50%;
    left: -2px;
    transform: translateY(-50%);
  }
  &--bottom-left {
    bottom: -2px;
    left: -2px;
  }
  &--top-right {
    top: -2px;
    right: -2px;
  }
  &--center-right {
    top: 50%;
    right: -2px;
    transform: translateY(-50%);
  }
  &--bottom-right {
    bottom: -2px;
    right: -2px;
  }
}
