$buttonFontColor: $white;
$buttonColor: $mintPrimary;
$buttonColorHover: $mintPrimaryDark;
$buttonAltColor: $bluePrimary;
$buttonAltColorHover: $bluePrimaryDark;
$buttonDarkColor: $grayPrimary;
$buttonDarkColorHover: $black;
$buttonInverseColor: $white;
$buttonPeach: $peachPrimary;
$buttonPeachHover: $peachPrimaryDark;
$buttonTransparentWhite: rgba($white, 0);

$buttonInverseFontColor: $mintPrimary;
$buttonInverseAltFontColor: $bluePrimary;
$buttonInverseDarkFontColor: $grayPrimary;

$buttonActiveInverseColor: $white;
$buttonActiveInverseFontColor: $peachPrimary;
$buttonActiveInverseInteractionColor: $peachPrimary;
$buttonActiveInverseInteractionFontColor: $white;

$buttonBoxShadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);
$buttonActiveBoxShadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2);
$buttonActiveScale: scale(0.985);

@function getColorMix($baseColor, $nextColor, $percent) {
  @return mix($nextColor, $baseColor, $percent);
}

@mixin hoverMix($baseColor, $nextColor, $percent) {
  &:hover,
  &:focus,
  &:active,
  &:active:focus {
    &:not(.sg-button-primary--disabled) {
      background-color: getColorMix($nextColor, $baseColor, $percent);
    }
  }
}

@mixin sgButtonBasics() {
  @include hoverMix($buttonColorHover, $buttonColor, 72%);
  will-change: background-color;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: pointer;
  border: none;
  user-select: none;
  outline-width: 0;
  text-decoration: none;
  overflow: hidden;
  white-space: nowrap;
  font-weight: $fontWeightBold;
  text-transform: uppercase;
  border-radius: 20px;
  transition-property: background-color;
  transition-timing-function: ease-in-out;
  transition-duration: 0.3s;

  // hack for proper text centering on Safari related to inline-flex issue with <button> tag
  &::before,
  &::after {
    content: '';
    flex: 1 0 auto;
  }

  &:active,
  &:focus,
  &:hover {
    text-decoration: none;
  }

  &__container {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &--full-width {
    width: 100%;
  }

  &--alt {
    @include hoverMix($buttonAltColorHover, $buttonAltColor, 72%);
    background-color: $buttonAltColor;
  }

  &--dark {
    @include hoverMix($buttonDarkColorHover, $buttonDarkColor, 72%);
    background-color: $buttonDarkColor;
  }

  &--inverse {
    @include hoverMix($buttonInverseDarkFontColor, $buttonTransparentWhite, 16%);
    background-color: $buttonTransparentWhite;
    border: 2px solid $buttonInverseDarkFontColor;
    color: $buttonInverseDarkFontColor;
    fill: $buttonInverseDarkFontColor;
  }

  &--alt-inverse {
    @include hoverMix($buttonInverseDarkFontColor, $buttonTransparentWhite, 16%);
    background-color: $buttonTransparentWhite;
    border: 2px solid $buttonInverseDarkFontColor;
    color: $buttonInverseDarkFontColor;
    fill: $buttonInverseDarkFontColor;
  }

  &--dark-inverse {
    @include hoverMix($buttonInverseDarkFontColor, $buttonTransparentWhite, 16%);
    background-color: $buttonTransparentWhite;
    border: 2px solid $buttonInverseDarkFontColor;
    color: $buttonInverseDarkFontColor;
    fill: $buttonInverseDarkFontColor;
  }

  &--active-inverse {
    @include hoverMix($buttonActiveInverseFontColor, $buttonTransparentWhite, 16%);
    background-color: $buttonTransparentWhite;
    border: 2px solid $buttonActiveInverseFontColor;
    color: $buttonActiveInverseFontColor;
    fill: $buttonActiveInverseFontColor;

    &.sg-button-secondary--disabled {
      &:hover,
      &:active,
      &:focus {
        background-color: $buttonActiveInverseColor;
        color: $buttonActiveInverseFontColor;
        fill: $buttonActiveInverseFontColor;
      }
    }
  }

  & .sg-label__text {
    cursor: pointer;
  }

  &--disabled {
    opacity: 0.45;
    cursor: default;

    &:active {
      transform: none;
    }

    &.sg-label__text {
      cursor: default;
    }
  }

  &--peach {
    @include hoverMix($buttonPeachHover, $buttonPeach, 72%);
    background-color: $buttonPeach;
    color: $buttonActiveInverseInteractionFontColor;
    fill: $buttonActiveInverseInteractionFontColor;
  }
}
