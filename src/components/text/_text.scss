$includeHtml: false !default;

$bodyTextSizes: (
  xxxlarge: (
    fontSize: 66px,
    lineHeight: 88px,
  ),
  xxlarge: (
    fontSize: 45px,
    lineHeight: 60px,
  ),
  xlarge: (
    fontSize: 33px,
    lineHeight: 44px,
  ),
  large: (
    fontSize: 24px,
    lineHeight: 32px,
  ),
  medium: (
    fontSize: 18px,
    lineHeight: 24px,
  ),
  small: (
    fontSize: 15px,
    lineHeight: 20px,
  ),
  xsmall: (
    fontSize: 12px,
    lineHeight: 16px,
  ),
  xxsmall: (
    fontSize: 9px,
    lineHeight: 12px,
  ),
);

@function getBodyTextSizeFromMap($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@mixin bodyTextTypeSizeVariant($size) {
  font-size: getBodyTextSizeFromMap($bodyTextSizes, $size, 'fontSize');
  line-height: getBodyTextSizeFromMap($bodyTextSizes, $size, 'lineHeight');
}

@if ($includeHtml) {
  .sg-text {
    @include bodyTextTypeSizeVariant(medium);
    font-family: $fontFamilyPrimary;
    font-weight: $fontWeightNormal;
    color: $black;

    &--inherited {
      font-size: inherit;
      line-height: inherit;
      font-family: inherit;
      font-weight: inherit;
      color: inherit;
    }

    &--container {
      position: relative;
    }

    &--xxxlarge {
      @include bodyTextTypeSizeVariant(xxxlarge);
    }

    &--xxlarge {
      @include bodyTextTypeSizeVariant(xxlarge);
    }

    &--xlarge {
      @include bodyTextTypeSizeVariant(xlarge);
    }

    &--large {
      @include bodyTextTypeSizeVariant(large);
    }

    &--small {
      @include bodyTextTypeSizeVariant(small);
    }

    &--xsmall {
      @include bodyTextTypeSizeVariant(xsmall);
    }

    &--xxsmall {
      @include bodyTextTypeSizeVariant(xxsmall);
    }

    &--link {
      cursor: pointer;
      text-decoration: none;
      color: $blue-50;

      &:hover,
      &:active {
        text-decoration: underline;
      }
    }

    &--link-disabled {
      cursor: default;

      &:hover,
      &:active {
        text-decoration: none;
      }
    }

    &--link-underlined {
      cursor: pointer;
      text-decoration: underline;
    }

    &--link-unstyled {
      cursor: pointer;
      color: inherit;
      font-weight: inherit;

      &:hover,
      &:active {
        text-decoration: underline;
      }
    }

    &--bold {
      font-weight: $fontWeightBold;
    }

    &--regular {
      font-weight: $fontWeightNormal;
    }

    &--break-words {
      word-break: break-word;
    }

    &--pre-line {
      white-space: pre-line;
    }

    &--pre-wrap {
      white-space: pre-wrap;
    }

    &--uppercase {
      text-transform: uppercase;
    }

    &--lowercase {
      text-transform: lowercase;
    }

    &--capitalize {
      text-transform: capitalize;
    }

    &--to-left {
      text-align: left;
    }

    &--to-right {
      text-align: right;
    }

    &--to-center {
      text-align: center;
    }

    &--justify {
      text-align: justify;
    }

    &--full {
      width: 100%;
    }

    &--no-wrap {
      white-space: nowrap;
    }

    &--white {
      color: $white;
    }

    &--black {
      color: $black;
    }

    // backward compatibility for html, it should be replaced with sg-text--gray-primary
    &--gray {
      color: $gray-70;
    }

    &--gray-secondary {
      color: $gray-50;
    }

    &--gray-secondary-light {
      color: $gray-40;
    }

    &--mint-dark {
      color: $green-50;
    }

    // backward compatibility for html, it should be replaced with sg-text--mint-dark
    &--mint {
      color: $green-50;
    }

    &--blue-dark {
      color: $blue-50;
    }

    // backward compatibility for html, it should be replaced with sg-text--blue-dark
    &--blue {
      color: $blue-50;
    }

    &--mustard-dark {
      color: $yellow-50;
    }

    // backward compatibility for html, it should be replaced with sg-text--mustard-dark
    &--mustard {
      color: $yellow-50;
    }

    &--lavender-dark {
      color: $indigo-50;
    }

    &--peach-dark {
      color: $red-50;
    }

    // backward compatibility for html, it should be replaced with sg-text--peach-dark
    &--peach {
      color: $red-50;
    }
  }
}
