$iconAsButtonColor: $bluePrimary;
$iconAsButtonActiveColor: rgba($iconAsButtonColor, 0.7);
$iconAsButtonLightColor: $white;
$iconAsButtonLightActiveColor: rgba($iconAsButtonLightColor, 0.7);
$iconAsButtonGrayColor: $grayPrimary;
$iconAsButtonGrayActiveColor: rgba($iconAsButtonGrayColor, 0.7);
$iconAsButtonGraySecondaryColor: $graySecondary;
$iconAsButtonGraySecondaryActiveColor: rgba($iconAsButtonGraySecondaryColor, 0.7);
$iconAsButtonGrayLightColor: $graySecondaryLight;
$iconAsButtonGrayLightActiveColor: rgba($iconAsButtonGrayLightColor, 0.7);
$iconAsButtonDarkColor: $black;
$iconAsButtonDarkActiveColor: rgba($iconAsButtonDarkColor, 0.7);
$iconAsButtonMintColor: $mintPrimary;
$iconAsButtonMintActiveColor: rgba($iconAsButtonMintColor, 0.7);
$iconAsButtonPeachColor: $peachPrimary;
$iconAsButtonPeachActiveColor: rgba($iconAsButtonPeachColor, 0.7);
$iconAsButtonMustardColor: $mustardPrimary;
$iconAsButtonMustardActiveColor: rgba($iconAsButtonMustardColor, 0.7);
$iconAsButtonLavenderColor: $lavenderPrimary;
$iconAsButtonLavenderActiveColor: rgba($iconAsButtonLavenderColor, 0.7);
$iconAsButtonActionColor: $white;
$iconAsButtonTransparentColor: rgba($iconAsButtonDarkColor, 0.2);
$iconAsButtonBlueColor: $bluePrimary;
$iconAsButtonBlueActiveColor: rgba($iconAsButtonBlueColor, 0.7);

$includeHtml: false !default;

@mixin colorTheme($modifierName, $color, $colorActive, $actionForegroundColor: $iconAsButtonActionColor) {
  &.sg-icon-as-button--#{$modifierName} {
    fill: $color;

    &:hover,
    &:active {
      fill: $colorActive;
    }

    .sg-icon-as-button__hole {
      border-color: $color;
    }
  }

  &.sg-icon-as-button--action {
    &:hover {
      &.sg-icon-as-button--#{$modifierName} {
        fill: $actionForegroundColor;
        background: $color;
      }
    }
  }

  &--action-active {
    &.sg-icon-as-button--#{$modifierName} {
      fill: $actionForegroundColor;
      background: $color;
    }
  }
}

@if ($includeHtml) {
  .sg-icon-as-button {
    display: inline-flex;
    background: none;
    border: none;
    outline: none;
    padding: 0;
    cursor: pointer;
    overflow: visible;
    fill: $iconAsButtonColor;

    &:hover,
    &:active {
      fill: $iconAsButtonActiveColor;
    }

    &__hole {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
    }

    &--with-border {
      .sg-icon-as-button__hole {
        border: solid $iconAsButtonColor 1px;
        border-radius: 50%;
      }
    }

    &--adaptive {
      fill: inherit;

      &:hover,
      &:active {
        fill: inherit;
      }

      .sg-icon-as-button__hole {
        border-color: inherit;
      }
    }

    &--small {
      .sg-icon-as-button__hole {
        width: 30px;
        height: 30px;
      }
    }

    &--xsmall {
      .sg-icon-as-button__hole {
        width: 24px;
        height: 24px;
      }
    }

    &--xxsmall {
      .sg-icon-as-button__hole {
        width: 16px;
        height: 16px;
      }
    }

    @include colorTheme('light', $iconAsButtonLightColor, $iconAsButtonLightActiveColor, $iconAsButtonColor);
    @include colorTheme('gray', $iconAsButtonGrayColor, $iconAsButtonGrayActiveColor);
    @include colorTheme('gray-secondary', $iconAsButtonGraySecondaryColor, $iconAsButtonGraySecondaryActiveColor);
    @include colorTheme('gray-light', $iconAsButtonGrayLightColor, $iconAsButtonGrayLightActiveColor);
    @include colorTheme('dark', $iconAsButtonDarkColor, $iconAsButtonDarkActiveColor);
    @include colorTheme('mint', $iconAsButtonMintColor, $iconAsButtonMintActiveColor);
    @include colorTheme('blue', $iconAsButtonBlueColor, $iconAsButtonBlueActiveColor);
    @include colorTheme('mustard', $iconAsButtonMustardColor, $iconAsButtonMustardActiveColor);
    @include colorTheme('lavender', $iconAsButtonLavenderColor, $iconAsButtonLavenderActiveColor);
    @include colorTheme('peach', $iconAsButtonPeachColor, $iconAsButtonPeachActiveColor);

    &--action {
      transition: background 0.3s ease-out, fill 0.3s ease-out;
      border-radius: 50%;
    }

    &--transparent {
      transition: background 0.3s ease-out, fill 0.3s ease-out;
      border-radius: 50%;

      &:hover {
        background: $iconAsButtonTransparentColor;
      }
    }

    &--action-active {
      background: $iconAsButtonColor;
      fill: $iconAsButtonActionColor;
      border-radius: 50%;

      &:hover {
        fill: $iconAsButtonActionColor;
      }

      &.sg-icon-as-button--adaptive {
        fill: inherit;
        background: inherit;
      }
    }

    &--transparent-active {
      fill: $iconAsButtonColor;
      background: $iconAsButtonTransparentColor;

      &.sg-icon-as-button--adaptive {
        fill: inherit;
      }
    }
  }
}
