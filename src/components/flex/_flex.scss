$flexSpacingsMap: (
  'xxs': spacing(xxs),
  'xs': spacing(xs),
  's': spacing(s),
  'm': spacing(m),
  'l': spacing(l),
  'xl': spacing(xl),
  'xxl': spacing(xxl),
  'xxxl': spacing(xxxl),
  'xxxxl': spacing(xxxxl),
);

$marginSides: (
  top
  right
  bottom
  left
);

$flexProps: (
  justify-content
  align-items
  align-self
);
$flexJustifyValues: (
  space-between
  space-evenly
  space-around
);
$flexAlignmentValues: (
  center
  flex-start
  flex-end
  baseline
  stretch
);

.sg-flex {
  display: flex;

  &--full-width {
    width: 100%;
  }

  &--full-height {
    height: 100%;
  }

  &--no-shrink {
    flex-shrink: 0;
  }

  &--inline {
    display: inline-flex;
  }

  &--column {
    flex-direction: column;
  }

  &--column-reverse {
    flex-direction: column-reverse;
  }

  &--row {
    flex-direction: row;
  }

  &--row-reverse {
    flex-direction: row-reverse;
  }

  &--wrap {
    flex-wrap: wrap;
  }

  &--wrap-reverse {
    flex-wrap: wrap-reverse;
  }

  @each $value in $flexJustifyValues {
    &--justify-content-#{$value} {
      justify-content: #{$value};
    }
  }

  @each $propName in $flexProps {
    @each $propValue in $flexAlignmentValues {
      &--#{$propName}-#{$propValue} {
        #{$propName}: #{$propValue};
      }
    }
  }

  @each $sizeName, $size in $flexSpacingsMap {
    &--margin-#{$sizeName} {
      margin: #{$size};
    }
  }

  @each $sizeName, $size in $flexSpacingsMap {
    @each $side in $marginSides {
      &--margin-#{$side}-#{$sizeName} {
        margin-#{$side}: #{$size};
      }
    }
  }
}

// helper class just for add spacing documentation into SG
.doc-spacing {
  background-color: $blue-30;
  margin-right: spacing(xl);

  @each $sizeName, $size in $flexSpacingsMap {
    &--#{$sizeName} {
      width: #{$size};
      height: #{$size};
    }
  }
}
